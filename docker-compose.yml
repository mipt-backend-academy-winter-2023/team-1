version: "3.9"

services:
  user_database:
    image: "postgres"
    env_file:
      - database.env
    ports:
      - "5433:5432"
    volumes:
      - user-data:/var/lib/postgresql/data/

  routing_database:
    image: "postgres"
    env_file:
      - routing_database.env
    ports:
      - "5434:5432"
    volumes:
      - routing-data:/var/lib/postgresql/routing_data/

  photos:
    build:
      context: .
      dockerfile: photos/photos.Dockerfile
      args:
        JAVA_VERSION: "17.0.9-amzn"
    ports:
      - "8083:8083"
    expose:
      - "8083"
    volumes:
      - pictures-data:/data/photos/

  auth:
    build:
      context: .
      dockerfile: auth/auth.Dockerfile
      args:
        JAVA_VERSION: "17.0.9-amzn"
    ports:
      - "8082:8082"
    expose:
      - "8082"
    depends_on:
      - user_database

  routing-1:
    build:
      context: .
      dockerfile: routing/routing.Dockerfile
      args:
        JAVA_VERSION: "17.0.9-amzn"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    ports:
      - "8081"
    depends_on:
      - routing_database
  routing-2:
    extends:
      service: routing-1
  routing-3:
    extends:
      service: routing-1

  routing_balancer:
    image: nginx
    deploy:
      resources:
        limits:
          memory: 64M
        reservations:
          cpus: '0.25'
          memory: 20M
    ports:
      - "8084:8084"
    expose:
      - "8084"
    volumes:
      - "./routing/balancer/nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      routing-1:
        condition: service_started
      routing-2:
        condition: service_started
      routing-3:
        condition: service_started

volumes:
  user-data:
  routing-data:
  pictures-data:
